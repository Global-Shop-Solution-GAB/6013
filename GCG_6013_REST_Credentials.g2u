Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("REST Credential Setup (6013)")
Gui.f_Main..Size(494,353)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(True)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(True)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..Event(UnLoad,f_Main_UnLoad)
Gui.f_Main..ShowCompanyCode(False)
Gui.f_Main.lblEnvSel.Create(Label,"Select an Environment to Activate:",True,167,13,0,8,8,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblEnvSel.BorderStyle(0)
Gui.f_Main.chkProd.Create(CheckBox)
Gui.f_Main.chkProd.Enabled(True)
Gui.f_Main.chkProd.Visible(True)
Gui.f_Main.chkProd.Zorder(0)
Gui.f_Main.chkProd.Size(78,20)
Gui.f_Main.chkProd.Position(8,28)
Gui.f_Main.chkProd.Caption("Production")
Gui.f_Main.chkProd.FontName("Tahoma")
Gui.f_Main.chkProd.FontSize(8.25)
Gui.f_Main.chkProd.TabStop(True)
Gui.f_Main.chkProd.TabIndex(1)
Gui.f_Main.chkProd.Event(Change,chkProd_Change)
Gui.f_Main.chkQA.Create(CheckBox)
Gui.f_Main.chkQA.Enabled(True)
Gui.f_Main.chkQA.Visible(True)
Gui.f_Main.chkQA.Zorder(0)
Gui.f_Main.chkQA.Size(75,20)
Gui.f_Main.chkQA.Position(100,28)
Gui.f_Main.chkQA.Caption("QA")
Gui.f_Main.chkQA.FontName("Tahoma")
Gui.f_Main.chkQA.FontSize(8.25)
Gui.f_Main.chkQA.TabStop(True)
Gui.f_Main.chkQA.TabIndex(2)
Gui.f_Main.chkQA.Event(Change,chkQA_Change)
Gui.f_Main.cmdSave.Create(Button)
Gui.f_Main.cmdSave.Enabled(False)
Gui.f_Main.cmdSave.Visible(True)
Gui.f_Main.cmdSave.Zorder(0)
Gui.f_Main.cmdSave.Size(68,23)
Gui.f_Main.cmdSave.Position(415,20)
Gui.f_Main.cmdSave.Caption("Save")
Gui.f_Main.cmdSave.FontName("Tahoma")
Gui.f_Main.cmdSave.FontSize(8.25)
Gui.f_Main.cmdSave.TabStop(True)
Gui.f_Main.cmdSave.TabIndex(10)
Gui.f_Main.cmdSave.Event(Click,cmdSave_Click)
Gui.f_Main.lblClientId.Create(Label,"Client ID:",True,45,13,0,8,59,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblClientId.BorderStyle(0)
Gui.f_Main.lblClientSec.Create(Label,"Client Secret:",True,65,13,0,8,102,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblClientSec.BorderStyle(0)
Gui.f_Main.lblCert.Create(Label,"Certificate Name/File Location:",True,147,13,0,8,145,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblCert.BorderStyle(0)
Gui.f_Main.lblCertKey.Create(Label,"Certificate Key:",True,75,13,0,8,188,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblCertKey.BorderStyle(0)
Gui.f_Main.lblNotifURL.Create(Label,"Notification REST URL:",True,108,13,0,8,231,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblNotifURL.BorderStyle(0)
Gui.f_Main.lblReqURL.Create(Label,"Part Request URL:",True,89,13,0,8,274,True,0,"Tahoma",8.25,,0,0)
Gui.f_Main.lblReqURL.BorderStyle(0)
Gui.f_Main.txtClientID.Create(TextBox,"",True,475,20,0,8,77,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtClientID.TabStop(True)
Gui.f_Main.txtClientID.TabIndex(3)
Gui.f_Main.txtClientSec.Create(TextBox,"",True,475,20,0,8,120,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtClientSec.TabStop(True)
Gui.f_Main.txtClientSec.TabIndex(4)
Gui.f_Main.txtCertName.Create(TextBox,"",True,440,20,0,8,163,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtCertName.TabStop(True)
Gui.f_Main.txtCertName.TabIndex(5)
Gui.f_Main.txtCertKey.Create(TextBox,"",True,475,20,0,8,206,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtCertKey.TabStop(True)
Gui.f_Main.txtCertKey.TabIndex(7)
Gui.f_Main.txtNotifURL.Create(TextBox,"",True,475,20,0,8,249,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtNotifURL.TabStop(True)
Gui.f_Main.txtNotifURL.TabIndex(8)
Gui.f_Main.txtPartURL.Create(TextBox,"",True,475,20,0,8,292,True,0,"Tahoma",8.25,,1)
Gui.f_Main.txtPartURL.TabStop(True)
Gui.f_Main.txtPartURL.TabIndex(9)
Gui.f_Main.cmdBrowse.Create(Button)
Gui.f_Main.cmdBrowse.Enabled(True)
Gui.f_Main.cmdBrowse.Visible(True)
Gui.f_Main.cmdBrowse.Zorder(0)
Gui.f_Main.cmdBrowse.Size(29,20)
Gui.f_Main.cmdBrowse.Position(454,163)
Gui.f_Main.cmdBrowse.Caption("^")
Gui.f_Main.cmdBrowse.FontName("Tahoma")
Gui.f_Main.cmdBrowse.FontSize(8.25)
Gui.f_Main.cmdBrowse.Event(Click,cmdBrowse_Click)
Gui.f_Main.cmdBrowse.TabStop(True)
Gui.f_Main.cmdBrowse.TabIndex(6)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

'open the connection
F.ODBC.Connection!conCom.OpenCommonConnection
Gui.f_Main..Show()
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.chkProd_Change.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.sCols.Declare(String)
V.Local.sEnv.Declare(String)
V.Local.sPropName.Declare(String)
V.Local.sPropValue.Declare(String)
V.Local.sRet.Declare(String)
v.Local.sRow.Declare(String)
V.Local.sSelected.Declare(String)
V.Local.sSQL.Declare(String)

V.Local.sSelected.Set(V.Screen.f_Main!chkProd.Value)
'if they are selecting prod, load the information that is already saved
F.Intrinsic.Control.If(V.Local.sSelected,=,1)
	Gui.f_Main.chkQA.Value(False)
	V.Local.sEnv.Set("PROD")
	F.Intrinsic.String.Build("SELECT * FROM GCG_6013_REST_CREDS WHERE PROPERTY_ENV = '{0}' ", V.Local.sEnv.Trim, v.Local.sSQL)
	
	F.Intrinsic.Control.If(V.DataTable.dtCreds.Exists)
		F.Data.DataTable.Close("dtCreds")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtCreds", "conCOM", V.Local.sSQL,True)
	F.Intrinsic.Control.If(V.DataTable.dtCreds.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtCreds.RowCount--,1)
			V.Local.sPropName.Set(V.DataTable.dtCreds(V.Local.iCnt).PROPERTY_NAME!FieldValTrim)
			V.Local.sPropValue.Set(V.DataTable.dtCreds(V.Local.iCnt).PROPERTY_VALUE!FieldValTrim)
			F.Intrinsic.Control.SelectCase(v.Local.sPropName.Trim)
			F.Intrinsic.Control.Case("CLIENT_ID")
				Gui.f_Main.txtClientID.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CLIENT_SECRET")
				Gui.f_Main.txtClientSec.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CERT")
				Gui.f_Main.txtCertName.Text(v.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CERT_KEY")
				Gui.f_Main.txtCertKey.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("NOTIFICATION_URL")
				Gui.f_Main.txtNotifURL.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("REQUEST_URL")
				Gui.f_Main.txtPartURL.Text(v.Local.sPropValue.Trim)
			F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.Next(V.Local.iCnt)
		gui.f_Main.cmdSave.Enabled(True)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		gui.f_Main.cmdSave.Enabled(True)
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	'if they are deselecting PROD, clear out the textboxes
	Gui.f_Main.txtClientID.Text("")
	Gui.f_Main.txtClientSec.Text("")
	Gui.f_Main.txtCertName.Text("")
	Gui.f_Main.txtCertKey.Text("")
	Gui.f_Main.txtNotifURL.Text("")
	Gui.f_Main.txtPartURL.Text("")
	gui.f_Main.cmdSave.Enabled(False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.chkProd_Change.End

Program.Sub.chkQA_Change.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.sCols.Declare(String)
V.Local.sEnv.Declare(String)
V.Local.sPropName.Declare(String)
V.Local.sPropValue.Declare(String)
V.Local.sRet.Declare(String)
v.Local.sRow.Declare(String)
V.Local.sSelected.Declare(String)
V.Local.sSQL.Declare(String)

V.Local.sSelected.Set(V.Screen.f_Main!chkQA.Value)
'if they are selecting QA, load the information that is already saved
F.Intrinsic.Control.If(V.Local.sSelected,=,1)
	Gui.f_Main.chkProd.Value(False)
	V.Local.sEnv.Set("QA")
	F.Intrinsic.String.Build("SELECT * FROM GCG_6013_REST_CREDS WHERE PROPERTY_ENV = '{0}' ", V.Local.sEnv.Trim, v.Local.sSQL)
	
	F.Intrinsic.Control.If(V.DataTable.dtCreds.Exists)
		F.Data.DataTable.Close("dtCreds")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtCreds", "conCOM", V.Local.sSQL,True)
	F.Intrinsic.Control.If(V.DataTable.dtCreds.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtCreds.RowCount--,1)
			V.Local.sPropName.Set(V.DataTable.dtCreds(V.Local.iCnt).PROPERTY_NAME!FieldValTrim)
			V.Local.sPropValue.Set(V.DataTable.dtCreds(V.Local.iCnt).PROPERTY_VALUE!FieldValTrim)
			F.Intrinsic.Control.SelectCase(v.Local.sPropName.Trim)
			F.Intrinsic.Control.Case("CLIENT_ID")
				Gui.f_Main.txtClientID.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CLIENT_SECRET")
				Gui.f_Main.txtClientSec.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CERT")
				Gui.f_Main.txtCertName.Text(v.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("CERT_KEY")
				Gui.f_Main.txtCertKey.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("NOTIFICATION_URL")
				Gui.f_Main.txtNotifURL.Text(V.Local.sPropValue.Trim)
			F.Intrinsic.Control.Case("REQUEST_URL")
				Gui.f_Main.txtPartURL.Text(v.Local.sPropValue.Trim)
			F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.Next(V.Local.iCnt)
		gui.f_Main.cmdSave.Enabled(True)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	'if they are deselecting QA, clear out the textboxes
	Gui.f_Main.txtClientID.Text("")
	Gui.f_Main.txtClientSec.Text("")
	Gui.f_Main.txtCertName.Text("")
	Gui.f_Main.txtCertKey.Text("")
	Gui.f_Main.txtNotifURL.Text("")
	Gui.f_Main.txtPartURL.Text("")
	gui.f_Main.cmdSave.Enabled(False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.chkQA_Change.End

Program.Sub.cmdBrowse_Click.Start
F.Intrinsic.Control.Try
V.Local.sRet.Declare(String)

F.Intrinsic.UI.ShowOpenFileDialog("","*.pfx", V.Local.sRet)
F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	
	Gui.f_Main.txtCertName.Text(V.Local.sRet.Trim)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdBrowse_Click.End

Program.Sub.cmdSave_Click.Start
F.Intrinsic.Control.Try
V.Local.sClientID.Declare(String)
V.Local.sClientSecret.Declare(String)
V.Local.sCert.Declare(String)
V.Local.sCertKey.Declare(String)
V.Local.sNotificationUrl.Declare(String)
V.Local.sPartReqUrl.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sActive.Declare(String)
V.Local.sEnv.Declare(String)

V.Local.sClientID.Set(V.Screen.f_Main!txtClientID.Text)
V.Local.sClientSecret.Set(V.Screen.f_Main!txtClientSec.Text)
V.Local.sCert.Set(V.Screen.f_Main!txtCertName.Text)
V.Local.sCertKey.Set(V.Screen.f_Main!txtCertKey.Text)
V.Local.sNotificationUrl.Set(V.Screen.f_Main!txtNotifURL.Text)
V.Local.sPartReqUrl.Set(V.Screen.f_Main!txtPartURL.Text)

F.Intrinsic.Control.If(V.Screen.f_Main!chkProd.Value,=,1)
	V.Local.sActive.Set("Y")
	V.Local.sEnv.Set("PROD")
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_ACTIVE = '{0}' WHERE PROPERTY_ENV = '{1}'", v.Local.sActive.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_ACTIVE = 'N' WHERE PROPERTY_ENV = 'QA'", v.Local.sActive.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CLIENT_ID'", V.Local.sClientID.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CLIENT_SECRET'", V.Local.sClientSecret.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CERT' ", V.Local.sCert.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CERT_KEY'", V.Local.sCertKey.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'NOTIFICATION_URL'", V.Local.sNotificationUrl.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'REQUEST_URL'", V.Local.sPartReqUrl.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
F.Intrinsic.Control.ElseIf(v.Screen.f_Main!chkQA.Value,=,1)
	V.Local.sActive.Set("Y")
	V.Local.sEnv.Set("QA")
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_ACTIVE = '{0}' WHERE PROPERTY_ENV = '{1}'", v.Local.sActive.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_ACTIVE = 'N' WHERE PROPERTY_ENV = 'PROD'", v.Local.sActive.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CLIENT_ID'", V.Local.sClientID.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CLIENT_SECRET'", V.Local.sClientSecret.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CERT' ", V.Local.sCert.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'CERT_KEY'", V.Local.sCertKey.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'NOTIFICATION_URL'", V.Local.sNotificationUrl.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
	F.Intrinsic.String.Build("UPDATE GCG_6013_REST_CREDS SET PROPERTY_VALUE = '{0}' WHERE PROPERTY_ENV = '{1}' AND PROPERTY_NAME = 'REQUEST_URL'", V.Local.sPartReqUrl.Trim, v.Local.sEnv.Trim, v.Local.sSQL)
	f.ODBC.Connection!conCom.Execute(V.Local.sSQL)
F.Intrinsic.Control.EndIf

f.Intrinsic.UI.Msgbox("Credentials Saved")
F.Intrinsic.Control.ExitSub


F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

F.ODBC.Connection!conCom.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "REST Credential Setup", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$acollins$}$20200819211711452$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVkMo60XrNJzOAR4D3mv7zqDiFThBe/BM1iUkAEBEg0EArA1ulWzQ9Usg==
Program.Sub.Comments.End