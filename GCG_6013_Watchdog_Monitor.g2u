Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.Intrinsic.Control.CallSub(IsRunning)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Watchdog Monitor", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.IsRunning.Start
F.Intrinsic.Control.Try
V.Local.bCheck.Declare(String)
V.Local.bFileExists.Declare(Boolean)
V.Local.iRet.Declare(Long)
V.Local.sFileName.Declare(String)
V.Local.sWatchdogScript.Declare(String)
V.Local.sPID.Declare(String)

F.Intrinsic.String.Build("{0}\Watchdog.pid", v.Caller.FilesDir, V.Local.sFileName)
'check to see if the file created by the import watchdog exists
F.Intrinsic.File.Exists(V.Local.sFileName, V.Local.bFileExists)
'if the file exists, convert it to a string
F.Intrinsic.Control.If(V.Local.bFileExists,=,True)
	F.Intrinsic.File.File2String(V.Local.sFileName, V.Local.sPID)
	'check to see if the import watchdog pid is running
	F.Intrinsic.Task.PIDRunning(V.Local.sPID.Long, V.Local.bCheck)
	'if so, end this script. If not, call the script Async to ensure it's running
	F.Intrinsic.Control.If(V.Local.bCheck,=,True)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GCG_6013_Import_Watchdog.g2u", V.Caller.GasDir, V.Local.sWatchdogScript)
		F.Global.General.CallAsyncGAS(V.Local.sWatchdogScript, "", 2, V.Local.iRet)
	F.Intrinsic.Control.EndIf	
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}\GCG_6013_Import_Watchdog.g2u", V.Caller.GasDir, V.Local.sWatchdogScript)
	F.Global.General.CallAsyncGAS(V.Local.sWatchdogScript, "", 2, V.Local.iRet)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Watchdog Monitor", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.IsRunning.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8223.27623$}$1
${$6$}$acollins$}$20220725080743250$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk/XotSp2jZHgDGZ8gBmmOHW0IsMYFbjAjqotElpWnZ78XrKZDM3vvUQ==
Program.Sub.Comments.End