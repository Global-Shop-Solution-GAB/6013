Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("Watchdog (6013)")
Gui.f_Main..Size(218,72)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(False)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(False)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..ShowCompanyCode(False)
Gui.f_Main..Event(UnLoad,f_Main_UnLoad)
Gui.f_Main.cmdPause.Create(Button)
Gui.f_Main.cmdPause.Enabled(False)
Gui.f_Main.cmdPause.Visible(True)
Gui.f_Main.cmdPause.Zorder(0)
Gui.f_Main.cmdPause.Size(91,23)
Gui.f_Main.cmdPause.Position(118,10)
Gui.f_Main.cmdPause.Caption("Pause Import")
Gui.f_Main.cmdPause.FontName("Tahoma")
Gui.f_Main.cmdPause.FontSize(8.25)
Gui.f_Main.cmdPause.Event(Click,cmdPause_Click)
Gui.f_Main.cmdPause.TabStop(True)
Gui.f_Main.cmdPause.TabIndex(2)
Gui.f_Main.cmdStart.Create(Button)
Gui.f_Main.cmdStart.Enabled(True)
Gui.f_Main.cmdStart.Visible(True)
Gui.f_Main.cmdStart.Zorder(0)
Gui.f_Main.cmdStart.Size(91,23)
Gui.f_Main.cmdStart.Position(9,10)
Gui.f_Main.cmdStart.Caption("Start Import")
Gui.f_Main.cmdStart.FontName("Tahoma")
Gui.f_Main.cmdStart.FontSize(8.25)
Gui.f_Main.cmdStart.Event(Click,cmdStart_Click)
Gui.f_Main.cmdStart.TabStop(True)
Gui.f_Main.cmdStart.TabIndex(1)
Gui.f_Main.IsRunningTimer.Create(Timer)
Gui.f_Main.IsRunningTimer.Enabled(False)
Gui.f_Main.IsRunningTimer.Interval(60000)
Gui.f_Main.IsRunningTimer.Event(Timer,IsRunningTimer_Timer)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
V.Global.sPaused.Declare(String, "N")
V.Global.isRunning.Declare(String,"N")
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.bFileExists.Declare(Boolean)
V.Local.sFileName.Declare(String)
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.Intrinsic.UI.InvokeWaitDialog("Starting Watchdog....")


F.Intrinsic.String.Build("{0}\Watchdog.pid", v.Caller.FilesDir, V.Local.sFileName)
F.Intrinsic.File.Exists(V.Local.sFileName, V.Local.bFileExists)
F.Intrinsic.Control.If(V.Local.bFileExists,=,False)
	F.Intrinsic.File.String2File(V.Local.sFileName, V.Ambient.PID)
F.Intrinsic.Control.Else
	F.Intrinsic.File.DeleteFile(V.Local.sFileName)
	F.Intrinsic.File.String2File(V.Local.sFileName, V.Ambient.PID)
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.CloseWaitDialog
Gui.f_Main..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.cmdStart_Click.Start
F.Intrinsic.Control.Try
V.Local.bCheck.Declare(Boolean)
V.Local.bPartCheck.Declare(Boolean)
V.Local.bImportCheck.Declare(Boolean)
V.Local.sPartFile.Declare(String)
V.Local.sImportFile.Declare(String)
V.Local.iCnt.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sText.Declare(String)
V.Local.sPartReqScript.Declare(String)
V.Local.sImportScript.Declare(String)

Gui.f_Main.cmdPause.Enabled(False)
F.Intrinsic.Control.If(V.Global.isRunning,=,"N", "AND", v.Global.sPaused,=,"N")
	F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
		Gui.f_Main.IsRunningTimer.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.f_Main.IsRunningTimer.Enabled(False)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(FileProcessing)
	
F.Intrinsic.Control.ElseIf(V.Global.isRunning,=,"N", "AND", v.Global.sPaused,=,"Y")	
	F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
		Gui.f_Main.IsRunningTimer.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.f_Main.IsRunningTimer.Enabled(False)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ElseIf(V.Global.isRunning,=,"Y", "AND", v.Global.sPaused,=,"N")	
	F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
		Gui.f_Main.IsRunningTimer.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.f_Main.IsRunningTimer.Enabled(False)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
		Gui.f_Main.IsRunningTimer.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.f_Main.IsRunningTimer.Enabled(False)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

Gui.f_Main.cmdPause.Enabled(True)
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdStart_Click.End

Program.Sub.FileProcessing.Start
F.Intrinsic.Control.Try
V.Local.bCheck.Declare(Boolean)
V.Local.bPartCheck.Declare(Boolean)
V.Local.bImportCheck.Declare(Boolean)
V.Local.sPartFile.Declare(String)
V.Local.sImportFile.Declare(String)
V.Local.iCnt.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sText.Declare(String)
V.Local.sPartReqScript.Declare(String)
V.Local.sImportScript.Declare(String)

V.Global.isRunning.Set("Y")
	
F.Intrinsic.String.Build("{0}\PartRequest_IsRunning.pid", V.Caller.FilesDir, V.local.sPartFile)
F.Intrinsic.File.Exists(V.Local.sPartFile, V.Local.bPartCheck)
	
F.Intrinsic.String.Build("{0}\DataImport.pid", V.Caller.FilesDir, V.Local.sImportFile)
F.Intrinsic.File.Exists(V.Local.sImportFile, V.Local.bImportCheck)
F.Intrinsic.Control.If(V.Local.bPartCheck,=,True, "AND", V.Local.bImportCheck,=,True)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.ElseIf(V.Local.bPartCheck,=,False, "AND", V.Local.bImportCheck,=,False)
	F.Intrinsic.String.Build("{0}\PartRequest_IsRunning.pid", V.Caller.FilesDir, V.local.sPartFile)
	F.Intrinsic.File.Exists(V.Local.sPartFile, V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,True)
		F.Intrinsic.File.File2String(V.local.sPartFile, V.Local.sText)
		F.Intrinsic.Task.PIDRunning(V.Local.sText.Long, V.Local.bCheck)
		F.Intrinsic.Control.If(V.Local.bCheck,=,True)
			F.Intrinsic.Control.DoUntil(V.Local.bCheck,=,False)
				F.Intrinsic.Task.PIDRunning(V.Local.sText.Long, V.Local.bCheck)
			F.Intrinsic.Control.Loop
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0\}GCG_6013_Part_Refresh_Request.g2u", V.Caller.GasDir, V.Local.sPartReqScript)
			F.Global.General.CallAsyncGAS(V.Local.sPartReqScript, "", 2, V.Local.iRet)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\GCG_6013_Part_Refresh_Request.g2u", V.Caller.GasDir, V.Local.sPartReqScript)
		F.Global.General.CallAsyncGAS(V.Local.sPartReqScript, "", 2, V.Local.iRet)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.UI.Sleep(10)

	F.Intrinsic.File.Exists(V.Local.sPartFile, V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.Intrinsic.String.Build("{0}\DataImport.pid", V.Caller.FilesDir, V.Local.sImportFile)
		F.Intrinsic.File.Exists(V.Local.sImportFile, V.Local.bImportCheck)
		F.Intrinsic.Control.If(v.Local.bImportCheck,=,True)
			F.Intrinsic.File.File2String(v.Local.sImportFile, V.Local.sText)
			F.Intrinsic.Task.PIDRunning(V.Local.sText.Long, V.Local.bImportCheck)
			F.Intrinsic.Control.If(v.Local.bImportCheck,=,True)
				F.Intrinsic.Control.DoUntil(V.Local.bImportCheck,=,False)
					F.Intrinsic.Task.PIDRunning(V.Local.sText.Long, V.Local.bImportCheck)
				F.Intrinsic.Control.Loop
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}\GCG_6013_Data_Import.g2u", V.Caller.GasDir, V.Local.sImportScript)
				F.Global.General.CallAsyncGAS(V.Local.sImportScript, "", 2, V.Local.iRet)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}\GCG_6013_Data_Import.g2u", V.Caller.GasDir, V.Local.sImportScript)
			F.Global.General.CallAsyncGAS(V.Local.sImportScript, "", 2, V.Local.iRet)
		F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
	
F.Intrinsic.UI.Sleep(20)
V.Global.isRunning.Set("N")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FileProcessing.End

Program.Sub.cmdPause_Click.Start
F.Intrinsic.Control.Try
V.Local.bFileExists.Declare(Boolean)
V.Local.iRet.Declare(Long)
V.Local.sFileName.Declare(String)
V.Local.sPause.Declare(String)
V.Local.sResume.Declare(String)
V.Local.sGab.Declare(String)
Function.Intrinsic.Debug.InvokeDebugger
Function.Intrinsic.Debug.Stop

F.Intrinsic.Control.If(V.Global.isRunning,=,"Y")
	F.Intrinsic.UI.Sleep(30)
	F.Intrinsic.Control.CallSub(cmdPause_Click)
F.Intrinsic.Control.EndIf
''check to see if the user clicked pause import. If so, change the text on the button to say resume
F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
	Gui.f_Main.IsRunningTimer.Enabled(False)
	Gui.f_Main.cmdPause.Caption("Resume Import")
	V.Global.sPaused.Set("Y")
	F.Intrinsic.UI.Sleep(10)
	
F.Intrinsic.Control.ElseIf(V.Global.sPaused,=,"Y")
	Gui.f_Main.IsRunningTimer.Enabled(True)
	Gui.f_Main.cmdPause.Caption("Pause Import")
	F.Intrinsic.Control.CallSub(cmdStart_Click)
	V.Global.sPaused.Set("N")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.cmdPause_Click.End

Program.Sub.IsRunningTimer_Timer.Start
F.Intrinsic.Control.Try
V.Local.bFileExists.Declare(Boolean)
V.Local.iRet.Declare(Long)
V.Local.sFileName.Declare(String)
V.Local.sGab.Declare(String)

F.Intrinsic.Control.If(V.Global.sPaused,=,"N")
	F.Intrinsic.Control.If(V.Global.isRunning,=,"Y")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(cmdStart_Click)
	F.Intrinsic.Control.EndIf		
F.Intrinsic.Control.Else
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.IsRunningTimer_Timer.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try
V.Local.bFileExists.Declare(Boolean)
V.Local.sFileName.Declare(String)

F.Intrinsic.String.Build("{0}\Watchdog.pid", v.Caller.FilesDir, V.Local.sFileName)
F.Intrinsic.File.Exists(V.Local.sFileName, V.Local.bFileExists)
F.Intrinsic.Control.If(V.Local.bFileExists,=,True)
	F.Intrinsic.File.DeleteFile(v.Local.sFileName)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6013", "ProjectTitle", "CPR Data Import Watchdog", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8223.27623$}$1
${$6$}$acollins$}$20220725080846206$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk/XotSp2jZHgDGZ8gBmmOHTnyplC0gahYoOTDswriZESIXPJb0cvieg==
Program.Sub.Comments.End